// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "tap-preferred";
    tapping_term_ms = <200>;
};

/ {
    combos {
        compatible = "zmk,combos";
    };

    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        hs: homerow_shifts {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&kp>;
        };
        hsl: homerow_shifts_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFTS_LAYER";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "balanced";
            bindings =
                <&kp>,
                <&to>;
        };
        td: tapdance {
            compatible = "zmk,behavior-hold-tap";
            label = "TAPDANCE";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&kp>,
                <&kp>;
        };
        bl: layertap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERTAP";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings =
                <&to>,
                <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
            &kp Q               &kp W               &kp E                   &kp R               &kp T           &kp Y           &kp U               &kp I                   &kp O               &kp P
            &hm LCMD A          &hm LALT S          &hm LCTRL D             &hm LSHFT F         &kp G           &kp H           &hm RSHFT J         &hm RCTRL K             &hm RALT L          &hm RCMD SEMICOLON
            &kp Z               &kp X               &kp C                   &kp V               &kp B           &kp N           &kp M               &kp COMMA               &kp DOT             &kp SLASH
                                                                            &lt 1 SPACE         &lt 2 TAB       &lt 4 ENTER     &lt 3 BACKSPACE
            >;
        };

        Media_Nav {
            bindings = <
            &kp C_PREV      &kp C_VOL_UP    &kp C_VOL_DN        &kp C_NEXT      &trans          &trans              &trans          &trans         &trans           &trans
            &kp LCMD        &kp LALT        &kp LCTRL           &kp LSHFT       &trans          &kp CAPSLOCK        &kp LEFT        &kp DOWN       &kp UP           &kp RIGHT
            &trans          &trans          &trans              &trans          &trans          &kp DELETE          &kp HOME        &kp PAGE_DOWN  &kp PAGE_UP      &kp END
                                                                &trans          &trans          &kp ENTER           &kp BACKSPACE
            >;
        };

        BT_Mouse {
            bindings = <
            &trans          &trans          &trans              &trans              &trans          &trans      &mkp MB1            &mkp MB2            &trans          &trans
            &kp LCMD        &kp LALT        &kp LCTRL           &kp LSHFT           &trans          &trans      &mmv MOVE_LEFT      &mmv MOVE_DOWN      &mmv MOVE_UP    &mmv MOVE_RIGHT
            &out OUT_TOG    &bt BT_SEL 0    &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_CLR      &trans      &msc SCRL_LEFT      &msc SCRL_DOWN      &msc SCRL_UP    &msc SCRL_RIGHT
                                                                &trans              &trans          &trans      &trans
            >;
        };

        Num_Func {
            bindings = <
            &kp LEFT_BRACKET                &kp N7              &kp N8                  &kp N9                  &kp RIGHT_BRACKET       &kp ESC     &kp F7                  &kp F8                  &kp F9              &kp F12
            &hm LCMD SINGLE_QUOTE           &hm LALT N4         &hm LCTRL N5            &hm LSHFT N6            &kp EQUAL               &kp DOT     &hm RSHFT F4            &hm RCTRL F5            &hm RALT F6         &hm RCMD F11
            &kp GRAVE                       &kp N1              &kp N2                  &kp N3                  &kp BACKSLASH           &none       &kp F1                  &kp F2                  &kp F3              &kp F10
                                                                                        &kp N0                  &kp MINUS               &none       &none
            >;
        };

        Sym {
            bindings = <
            &kp LEFT_BRACE          &kp AMPERSAND       &kp ASTERISK    &kp LEFT_PARENTHESIS    &kp RIGHT_BRACE         &trans          &trans              &trans              &trans          &trans
            &kp DOUBLE_QUOTES       &kp DOLLAR          &kp PERCENT     &kp CARET               &kp PLUS                &trans          &kp RSHFT           &kp RCTRL           &kp RALT        &kp RCMD
            &kp TILDE               &kp EXCLAMATION     &kp AT_SIGN     &kp HASH                &kp PIPE                &trans          &trans              &trans              &trans          &trans
                                                                        &kp RIGHT_PARENTHESIS   &kp UNDERSCORE          &trans          &trans
            >;
        };
    };
};
